A /B /V1/V2/V3/V4

A1/B1/6 /2 /3 /5
A1/B1/4 /3 /1 /2
A1/B2/9 /3 /4 /3

compute = sum(V4)/sum(V2)

rows (index) | ([]indexes, filter, compute, sort)
0: standard(0) filter/compute/sort
columns (index) | ([]indexes, filter, compute, sort)
0: standard(1) filter/compute/sort
values (index, action, format) | ([]indexes, compute, format)
0: standard({3;count}, digits(0))
1: computed("V4/V2",[{5;sum},{3;sum}], compute{e[0]/e[1]}, digits(1))
2: standard({4;sum}, digits(0))

   B1      B2    T
A1 2;1,4;4 1;3;4 3;1,25;8
T  2;1,4;4 1;3;4 3;1,25;8

   B1                B2                T
   c(V2) V4/V2 s(V3) c(V2) V4/V2 s(V3) c(V2) V4/V2 s(V3)
A1 2     1,4   4     1     1     4     3     1,25  8
T  2     1,4   4     1     1     4     3     1,25  8

registeredRCIndexes : map[index]bool = {0,1}->{true,true}
registeredVIndexes: map[index,action]bool = {{3,count},{5,sum},{3,sum},{4,sum}}->{true, true}

# update cell for non compute required for compute (for k, _ := range registeredVIndexes)
cell.Record(k, k.action(record[k.index]))

# update cell for non compute (for i, s := range valueSeries)
if s.compute == nil : cell.Update(i, valueSeries[i].indexes[0])
if s.compute != nil : cell.Compute(i, s.compute , valueSeries[i].indexes)
